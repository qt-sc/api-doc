openapi: 3.0.0
info:
  title: zhihu_caffe
  contact: {}
  version: 0.0.3
servers:
- url: /
tags:
- name: user
  description: |
    In the app, user can post articles or reply an article.
- name: article
  description: An article can present infomation to other users, and users can interact
    with other users through this article.
- name: tag
  description: Tag is used to describe an article, and also be used to search articles.
- name: replay
  description: Replay can be posted by a user after reading an article. Other users
    can also interact with replay.
paths:
  /users/signup:
    get:
      tags:
      - user
      operationId: userSignup
      parameters:
      - name: newUser
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default response
  /users/logout:
    get:
      tags:
      - user
      operationId: userLogout
      parameters:
      - name: token
        in: cookie
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: Default response
  /users/login:
    post:
      tags:
      - user
      operationId: userLogin
      parameters:
      - name: id
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: password
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default response
  /users/{userid}:
    get:
      tags:
      - user
      summary: get user profile by userid
      operationId: getUserProfile
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default response
    put:
      tags:
      - user
      summary: update an existed user info by userid
      operationId: updateUser
      parameters:
      - name: userInfo
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default response
    delete:
      tags:
      - user
      summary: delete an existed user by userid
      operationId: deleteUser
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
  /api/users:
    get:
      tags:
      - user
      summary: get user list
      description: Returns a list containing all users.
      operationId: getUsers
      parameters: []
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                x-content-type: application/json
  /api/users/{userid}:
    get:
      tags:
      - user
      operationId: getUserInfo
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                x-content-type: application/json
  /api/users/{userid}/articles:
    get:
      tags:
      - article
      summary: get articles list written by a user with specified user id
      operationId: getArticles
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                x-content-type: application/json
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        password:
          type: string
          format: password
        articles:
          type: array
          xml:
            name: Article
            wrapped: true
          items:
            $ref: '#/components/schemas/Article'
        email:
          type: string
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        readNum:
          type: integer
          format: int64
        likeNum:
          type: integer
          format: int64
        content:
          type: string
        replies:
          type: array
          xml:
            name: Reply
            wrapped: true
          items:
            $ref: '#/components/schemas/Reply'
        tags:
          type: array
          xml:
            name: Tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
    Reply:
      type: object
      properties:
        id:
          type: integer
          format: int64
        likeNum:
          type: integer
          format: int64
        createTime:
          type: string
          format: date-time
        content:
          type: string
        author-url:
          type: string
    Tag:
      type: object
      properties:
        name:
          type: string
