openapi: 3.0.0
info:
  title: Zhihu_Caffe
  description: Zhihu_Caffe can craw data from ZhihuDaily and post article by user,  allowing
    users to reply the article and interact with other users.
  contact: {}
  version: 0.1.4
servers:
- url: /
tags:
- name: user
  description: |
    In the app, user can post articles or reply an article.
- name: article
  description: An article can present infomation to other users, and users can interact
    with other users through this article.
- name: reply
  description: Replay can be posted by a user after reading an article. Other users
    can also interact with replay.
- name: tag
  description: Tag is used to describe an article, and also be used to search articles.
paths:
  /users/signup:
    post:
      tags:
      - user
      summary: create a user in sign up page
      operationId: userSignup
      parameters:
      - name: user
        in: header
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/User'
      responses:
        default:
          description: Default response
  /users/logout:
    get:
      tags:
      - user
      operationId: userLogout
      parameters:
      - name: token
        in: cookie
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        default:
          description: Default response
  /users/login:
    post:
      tags:
      - user
      operationId: userLogin
      parameters:
      - name: userid
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: password
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default response
  /users/{userid}:
    put:
      tags:
      - user
      summary: update an existed user info by userid
      operationId: updateUser
      parameters:
      - name: user
        in: header
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/User'
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
    delete:
      tags:
      - user
      summary: delete an existed user by userid
      operationId: deleteUser
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
  /users/{userid}/articles/new:
    post:
      tags:
      - article
      summary: create an article by a user with specified userid
      operationId: createArticle
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: article
        in: header
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Article'
      responses:
        default:
          description: Default response
  /users/{userid}/articles/{articleid}:
    put:
      tags:
      - article
      summary: update an existed article info by userid and article id
      operationId: updateArticle
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
    delete:
      tags:
      - article
      summary: delete an article by userid and article id
      operationId: deleteArticle
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
  /users/{userid}/articles/{articleid}/like:
    put:
      tags:
      - article
      summary: like an article
      operationId: likeArticle
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
  /users/{userid}/articles/{articleid}/replies/new:
    post:
      tags:
      - reply
      summary: create an reply in a specified article
      operationId: createReply
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: reply
        in: header
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Reply'
      responses:
        default:
          description: Default response
  /users/{userid}/articles/{articleid}/replies/{replyid}/like:
    put:
      tags:
      - reply
      summary: like a reply in a specified article
      operationId: likeReply
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: replyid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default response
  /tags/new:
    post:
      tags:
      - tag
      operationId: createTag
      parameters:
      - name: tag
        in: header
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Tag'
      responses:
        default:
          description: Default response
  /api:
    get:
      summary: get apis list
      description: Returns a list containing all apis.
      operationId: getApis
      parameters: []
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apis'
  /api/users:
    get:
      tags:
      - user
      summary: get users list
      description: Returns a list containing all users.
      operationId: getUsers
      parameters:
      - name: pageNumber
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of persons returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
  /api/users/{userid}:
    get:
      tags:
      - user
      operationId: getUserInfo
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{userid}/articles:
    get:
      tags:
      - article
      summary: get articles list written by a user with specified user id
      operationId: getArticles
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: pageNumber
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of persons returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Articles'
  /api/users/{userid}/articles/{articleid}:
    get:
      tags:
      - article
      summary: get article by specified article id
      operationId: getArticle
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
  /api/users/{userid}/articles/{articleid}/replies:
    get:
      tags:
      - reply
      summary: get replies list in a specified article
      operationId: getReplies
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: pageNumber
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of persons returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replies'
  /api/users/{userid}/articles/{articleid}/replies/{replyid}:
    get:
      tags:
      - reply
      summary: get a reply with reply id in a specified article
      operationId: getReply
      parameters:
      - name: userid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: articleid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: replyid
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
  /api/tags:
    get:
      tags:
      - tag
      summary: get tag list
      description: Returns a list containing all tags.
      operationId: getTags
      parameters:
      - name: pageNumber
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of persons returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
  /api/tags/{tagname}/articles:
    get:
      tags:
      - tag
      operationId: searchArticlesByTag
      parameters:
      - name: tagname
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Number of persons returned
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Articles'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        password:
          type: string
          format: password
        articles:
          type: array
          xml:
            name: Article
            wrapped: true
          items:
            $ref: '#/components/schemas/Article'
        email:
          type: string
        url:
          pattern: /users/[0-9]*
          type: string
      example:
        password: ""
        id: 0
        articles:
        - replies:
          - createTime: 2000-01-23T04:56:07.000+00:00
            id: 5
            author-url: author-url
            content: content
            url: url
            likeNum: 2
          - createTime: 2000-01-23T04:56:07.000+00:00
            id: 5
            author-url: author-url
            content: content
            url: url
            likeNum: 2
          readNum: 1
          id: 6
          title: title
          content: content
          url: url
          likeNum: 5
          tags:
          - name: name
          - name: name
        - replies:
          - createTime: 2000-01-23T04:56:07.000+00:00
            id: 5
            author-url: author-url
            content: content
            url: url
            likeNum: 2
          - createTime: 2000-01-23T04:56:07.000+00:00
            id: 5
            author-url: author-url
            content: content
            url: url
            likeNum: 2
          readNum: 1
          id: 6
          title: title
          content: content
          url: url
          likeNum: 5
          tags:
          - name: name
          - name: name
        email: email
        url: url
    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        readNum:
          type: integer
          format: int64
        likeNum:
          type: integer
          format: int64
        content:
          type: string
        replies:
          type: array
          xml:
            name: Reply
            wrapped: true
          items:
            $ref: '#/components/schemas/Reply'
        tags:
          type: array
          xml:
            name: Tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        url:
          pattern: /users/[0-9]*/articles/[0-9]*
          type: string
      example:
        replies:
        - createTime: 2000-01-23T04:56:07.000+00:00
          id: 5
          author-url: author-url
          content: content
          url: url
          likeNum: 2
        - createTime: 2000-01-23T04:56:07.000+00:00
          id: 5
          author-url: author-url
          content: content
          url: url
          likeNum: 2
        readNum: 1
        id: 6
        title: title
        content: content
        url: url
        likeNum: 5
        tags:
        - name: name
        - name: name
    Reply:
      type: object
      properties:
        id:
          type: integer
          format: int64
        likeNum:
          type: integer
          format: int64
        createTime:
          type: string
          format: date-time
        content:
          type: string
        author-url:
          pattern: /users/[0-9]*
          type: string
        url:
          pattern: /users/[0-9]*/articles/[0-9]*/replies/[0-9]*
          type: string
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        id: 5
        author-url: author-url
        content: content
        url: url
        likeNum: 2
    Tag:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    Users:
      type: array
      xml:
        name: User
        wrapped: true
      items:
        $ref: '#/components/schemas/User'
      x-schema-name: Users
    Articles:
      type: array
      xml:
        name: Article
        wrapped: true
      items:
        $ref: '#/components/schemas/Article'
      x-schema-name: Articles
    Replies:
      type: array
      xml:
        name: Reply
        wrapped: true
      items:
        $ref: '#/components/schemas/Reply'
      x-schema-name: Replies
    Tags:
      type: array
      xml:
        name: Tag
        wrapped: true
      items:
        $ref: '#/components/schemas/Tag'
      x-schema-name: Tags
    Apis:
      type: object
      properties:
        users_url:
          type: string
          default: /api/users
        user_url:
          type: string
          default: /api/users/{userid}
        articles_url:
          type: string
          default: /api/users/{userid}/articles
        article_url:
          type: string
          default: /api/users/{userid}/articles/{articleid}
        replies_url:
          type: string
          default: /api/users/{userid}/articles/{articleid}/replies
        reply_url:
          type: string
          default: /api/users/{userid}/articles/{articleid}/replies/{replyid}
        tags_url:
          type: string
          default: /api/users
        tag_url:
          type: string
          default: /api/users/{userid}
      example:
        tags_url: /api/users
        reply_url: /api/users/{userid}/articles/{articleid}/replies/{replyid}
        replies_url: /api/users/{userid}/articles/{articleid}/replies
        users_url: /api/users
        user_url: /api/users/{userid}
        tag_url: /api/users/{userid}
        article_url: /api/users/{userid}/articles/{articleid}
        articles_url: /api/users/{userid}/articles
  parameters:
    userid:
      name: userid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    articleid:
      name: articleid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    replyid:
      name: replyid
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: integer
    tagname:
      name: tagname
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    pageSize:
      name: pageSize
      in: query
      description: Number of persons returned
      required: false
      style: form
      explode: true
      schema:
        type: integer
    pageNum:
      name: pageNumber
      in: query
      description: Page number
      required: false
      style: form
      explode: true
      schema:
        type: integer
